name: PR Workflow

on:
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:

  build:
    runs-on: ubuntu-latest
    outputs:
      size: ${{ steps.build.outputs.size }}
    steps:
    - uses: actions/checkout@v2
    - uses: Swatinem/rust-cache@v1
    - run: cargo test --all-features --verbose
    - name: Build (Release)
      id: build
      run: "cargo run -- build && echo ::set-output name=size::`cat build/wasm_bg.wasm | wc -c`"
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v1.1
      with:
        publish-dir: './build'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: ${{ github.event.pull_request.title }}
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      timeout-minutes: 1

  checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: rustup install --profile default nightly
    # NOTE: we use nightly here to enable the options error_on_line_overflow and
    #       error_on_unformatted
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features --workspace -- -D warnings
    - run: cargo +nightly fmt -- --check
